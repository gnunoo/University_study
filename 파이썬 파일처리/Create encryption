# 과제.py

alpha = []
Alpha = []
for i in range(26):
    alpha.append(chr(ord("a")+i))
    Alpha.append(chr(ord("A")+i))

# 키를 입력받고 키의 알파벳의 중복을 없앰
key = input("입력해주세요:")
key=key.replace(" ","")
key = list(key)
result_key = []
for i in key:
    if i not in result_key:
        result_key.append(i)

# 파일 읽어오기
f=open("과제.txt",'r')
data=f.read()
data=list(data)
# 알파벳 카운터
number=[]

for i in range(26): # 알파벳 0으로 초기화
    number.append(0)

for i in range(ord("a"), ord("z")+1): # 알파벳의 소문자의 갯수 세기
    for j in range(0, len(data)):
        if (chr(i) == data[j]):
            number[i-97] += 1

for i in range(ord("A"), ord("Z")+1): # 알파벳의 대문자의 갯수 새기
    for j in range(0, len(data)):
        if(chr(i)==data[j]):
            number[i-65] += 1

#대문자의 위치 저장
Alpha_index=[]
for i in range(len(data)):
    Alpha_index.append(0)
    
for i in range(len(data)):
    if(ord(data[i])>=ord("A")) and (ord(data[i])<=ord("Z")):
        Alpha_index[i]=1
    else:
        Alpha_index[i]=0

#알파벳 갯수와 갯수에 대한 알파벳을 내림차순으로 정렬

sort_alpha=[]
for i in range(26):
    sort_alpha.append(chr(ord("a")+i))
    
for i in range(26): 
    for j in range(25):
        if number[j]<number[j+1]:
            number[j],number[j+1]=number[j+1],number[j]
            sort_alpha[j],sort_alpha[j+1]=sort_alpha[j+1],sort_alpha[j]


# 키값완성
for i in sort_alpha:
    if i not in result_key:
        result_key.append(i)
encoding_key=dict(zip(alpha,result_key))
encoding_key_Alpha=dict(zip(Alpha,result_key))

#암호화
result_list=[]
temp=''
for i in data:
    if i in encoding_key:
        if ord(i)>=ord("a") and ord(i)<=ord("z"):#소문자 암호화
            temp=i.replace(i,encoding_key[i])
            result_list.append(temp)  
    else:
        if ord(i)>=ord("A") and ord(i)<=ord("Z"):#대문자 암호화
            temp=i.replace(i,encoding_key_Alpha[i])
            result_list.append(temp)
        else:
            result_list.append(i)
result_list=''.join(result_list)

f=open("과제_암호화.txt",'w')
f.write(result_list)


#복호화 진행을 위해 키와 키값 서로 바꾸기
data=list(result_list)
decoding_key=dict(zip(result_key,alpha))
decoding_key_Alpha=dict(zip(result_key,Alpha))

#복호화 진행
decodeing_data=[]
j=0
for i in data:
    if i in decoding_key:
        if Alpha_index[j]==0 and ord(i)>=ord("a") and ord(i)<=ord("z"):#소문자 암호화
                temp=i.replace(i,decoding_key[i])
                decodeing_data.append(temp)
            
        elif Alpha_index[j]==1 and ord(i)>=ord("a") and ord(i)<=ord("z"):
                temp=i.replace(i,decoding_key_Alpha[i])
                decodeing_data.append(temp)
                
    else:
        decodeing_data.append(i)
    j=j+1
    

decodeing_data=''.join(decodeing_data)

f=open("과제_복호화.txt",'w')
f.write(decodeing_data)


f.close()
